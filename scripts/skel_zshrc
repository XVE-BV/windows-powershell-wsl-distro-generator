#!/bin/zsh

# /etc/skel/.zshrc

# add ~/bin to PATH if it exists
if [ -d "$HOME/bin" ] && [[ ":$PATH:" != *":$HOME/bin:"* ]]; then
  PATH="$HOME/bin:$PATH"
fi

# Jump straight into /apps on interactive shells
if [[ -o interactive && $(id -u) -ne 0 ]]; then
cd /apps
fi

# Show XVE logo in green
GREEN=$'\e[32m'
RESET=$'\e[0m'

# Show XVE logo in green, preserving alignment
printf '%b\n' "${GREEN}____  _______   _______________${RESET}"
printf '%b\n' "${GREEN}\   \/  /\   \ /   /\_   _____/${RESET}"
printf '%b\n' "${GREEN} \     /  \   Y   /  |    __)_ ${RESET}"
printf '%b\n' "${GREEN} /     \   \     /   |        \\\\${RESET}"
printf '%b\n' "${GREEN}/___/\  \   \___/   /_______  /${RESET}"
printf '%b\n' "${GREEN}      \_/                   \/ ${RESET}"
echo


# Make nano the default editor
export VISUAL=nano
export EDITOR="$VISUAL"

# Laravel Sail function and shortcuts
sail() {
  if [[ -f ./vendor/bin/sail ]]; then
    zsh ./vendor/bin/sail "$@"
  else
    echo "vendor/bin/sail not found"
  fi
}
alias s='sail '
alias sa='sail artisan '
alias sc='sail composer '
alias sm='sa migrate'
alias smf='sa migrate:fresh'
alias smfs='sa migrate:fresh --seed'
alias sus='s up -d'
alias sdown='s stop'

# Powerlevel10k instant prompt (if installed)
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

source /opt/powerlevel10k/powerlevel10k.zsh-theme
[[ -f ~/.p10k.zsh ]] && source ~/.p10k.zsh

# 1) Auto-symlink Windows SSH folder if none exists
if [[ -o interactive && ! -e $HOME/.ssh ]]; then
  # Get Windows username
  WIN_USER=$(/mnt/c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe -NoProfile -Command '$Env:USERNAME' 2>/dev/null | tr -d '\r')
  WIN_SSH="/mnt/c/Users/${WIN_USER}/.ssh"

  if [[ -d $WIN_SSH ]]; then
    echo "Linking ~/.ssh → $WIN_SSH"
    ln -s "$WIN_SSH" "$HOME/.ssh"
  else
    echo "⚠ould not find Windows SSH folder at $WIN_SSH"
  fi
fi

# 2) Start ssh-agent if needed and load keys
if [[ -o interactive && -z $SSH_AUTH_SOCK ]]; then
  eval "$(ssh-agent -s)" >/dev/null

  if compgen -G "$HOME/.ssh/id_*" >/dev/null; then
    for key in "$HOME/.ssh"/id_*; do
      [[ $key = *.pub ]] && continue
      ssh-add "$key" >/dev/null 2>&1
    done
  fi
fi